<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.vas.dao.ScJxsjDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.vas.entity.ScJxsjEntity" id="scJxsjMap">
        <result property="vehiOwner" column="VEHI_OWNER"/>
        <result property="enterTime" column="ENTER_TIME"/>
        <result property="licensePlate" column="LICENSE_PLATE"/>
        <result property="enterCardNo" column="ENTER_CARD_NO"/>
        <result property="enterName" column="ENTER_NAME"/>
        <result property="dataid" column="DATAID"/>
    </resultMap>

	<select id="queryObject" resultType="io.renren.vas.entity.ScJxsjEntity">
		select * from sc_jxsj where dataid = ${value}
	</select>

	<select id="queryList" resultType="io.renren.vas.entity.ScJxsjEntity">
		select * from sc_jxsj
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by DATAID desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit  #{limit} offset #{offset}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from sc_jxsj 
	</select>
	 
	<insert id="save" parameterType="io.renren.vas.entity.ScJxsjEntity">
		insert into sc_jxsj
		(
			vehi_owner, 
			enter_time, 
			license_plate, 
			enter_card_no, 
			enter_name, 
			dataid
		)
		values
		(
			#{vehiOwner}, 
			'${enterTime}', 
			#{licensePlate}, 
			#{enterCardNo}, 
			#{enterName}, 
			(select coalesce(max(dataid),0)+1 from sc_jxsj)
		)
	</insert>
	 
	<insert id="update" parameterType="io.renren.vas.entity.ScJxsjEntity">
		insert into sc_jxsj
		(
			vehi_owner, 
			enter_time, 
			license_plate, 
			enter_card_no, 
			enter_name, 
			dataid
		)
		values
		(
			#{vehiOwner}, 
			'${enterTime}', 
			#{licensePlate}, 
			#{enterCardNo}, 
			#{enterName}, 
			(select coalesce(max(dataid),0)+1 from sc_jxsj)
		)
	</insert>
	
	<delete id="delete">
		delete from sc_jxsj where dataid = ${value}
	</delete>
	
	<delete id="deleteBatch">
		delete from sc_jxsj where dataid in 
		<foreach item="dataid" collection="array" open="(" separator="," close=")">
			${dataid}
		</foreach>
	</delete>

</mapper>